spring.application.name=email-agent
server.port=8881

embabel.models.defaultLlm=gemini-2.5-flash

spring.ai.openai.api-key={GEMINI_API_KEY}
spring.ai.openai.base-url=https://generativelanguage.googleapis.com/v1beta/openai

spring.ai.openai.embedding.options.model=gemini-embedding-001
spring.ai.openai.embedding.embeddings-path=/embeddings
spring.ai.openai.embedding.options.dimensions=768



# ----- gemini config -----
gemini.default-base-url=https://generativelanguage.googleapis.com/v1beta/openai
gemini.default-api-key={GEMINI_API_KEY}

gemini.models.chat.name=gemini-2.5-flash
gemini.models.chat.api-key={GEMINI_API_KEY}
gemini.models.chat.path=/chat/completions

api.client.base-url=http://localhost:8880

# --- chat2 ---
gemini.models.chat2.name=gemini-2.5-flash
gemini.models.chat2.api-key={GEMINI_API_KEY}
gemini.models.chat2.path=/chat/completions

# --- mail config ---
spring.mail.host=sandbox.smtp.mailtrap.io
spring.mail.port=587
spring.mail.username=bac0ed3f8cd1c7
spring.mail.password=fe7454ea53b18f
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# =================================================================
# CONFIGURAÇÃO DO BANCO DE DADOS POSTGRESQL
# =================================================================
# URL de conexão com o banco de dados que está rodando no Docker
spring.datasource.url=jdbc:postgresql://localhost:5433/documents-vector
# Usuário e senha definidos no docker-compose.yml
spring.datasource.username=admin
spring.datasource.password=adminpass
# Driver do PostgreSQL
spring.datasource.driver-class-name=org.postgresql.Driver

# =================================================================
# CONFIGURAÇÃO DO SPRING AI E PGVECTOR
# =================================================================
# Nome da tabela onde os embeddings serão salvos
spring.ai.vectorstore.pgvector.table-name=pdf_embeddeds

# Dimensão do vetor. Este número PRECISA ser igual à dimensão do modelo de embedding que você está usando.
# Por exemplo, o modelo "text-embedding-ada-002" da OpenAI usa 1536 dimensões.
# Verifique a documentação do seu modelo de embedding para o valor correto.
spring.ai.vectorstore.pgvector.dimensions=768

# Tipo de índice para busca. HNSW é geralmente o mais rápido para busca de similaridade.
spring.ai.vectorstore.pgvector.index-type=HNSW

# Métrica para calcular a distância/similaridade entre vetores.
# COSINE (Cosseno) é o padrão e muito recomendado para embeddings de texto.
spring.ai.vectorstore.pgvector.distance-type=COSINE-DISTANCE
# Permite que o Spring AI crie e gerencie o schema da tabela (recomendado)
spring.ai.vectorstore.pgvector.schema-validation=true
